services:
  web:
    build: .
    command: sh -c 'poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/code
      - ./media:/code/media
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
      - celery
      - celery-beat
    env_file:
      - ./.env

  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: poetry run celery -A config worker -l INFO
    depends_on:
      - redis
    env_file:
      - ./.env

  celery-beat:
    build: .
    command: poetry run celery -A config beat -l INFO
    depends_on:
      - redis
      - celery
    env_file:
      - ./.env

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
  redis_data: